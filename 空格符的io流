若单纯cout <<“\0”;会输出空格。
如果cout <<“123\0”;/0只是表示结束，不会有输出。
'\0'  作为结束字符串的空字符，在C语言标准中，空字符的定义为：“所有的位为0的字节称为空字符（null character）”。
也就是说，空字符本身并不是0，而是它的值为0,也就是说空字符其实是int型。'\0'是一个常量，等同于0
当常量0处于应该作为指针使用的上下文中时，它就作为空指针使用：int *p=0;(等价于NULL)。(void*)0。
然而：当函数有原型生命的时候，编译器知道你想要的是指针还是0。但是如果函数没有原型生命，或是可变长参数函数，编译器就不能理解了。
比如常见的printf()，它就是一个可变长参数函数，一般来说，会使用NULL来表示参数的结束。这时传递0就不好使了。
说了这么多，总结起来也就两点：
1、NULl不是0，是空指针。
2、'\0'是真正的int0。
